{% extends "layouts/default.html.j2" %}

{% block page_title %}Pool detail{% endblock %}
{% block extra_menus %}
    <a x-data="{mgrUrl: qparams.get('mgr')}" :href="nodesUrl(mgrUrl)" class="navbar-item">
        Nodes
    </a>
{% endblock %}
{% block body %}
    <div x-data="data" x-init="getPool" class="p-4">
        {% with %}
            {% set menus=[{"name": "Pools", "href": "`/pools?mgr=${mgrUrl}`"}, {"name": "", "x_text": "poolName"}] %}
            {% include "partials/breadcrumb.html.j2" %}
        {% endwith %}

        <nav class="level has-background-primary-light py-4">
            <div class="level-item has-text-centered">
                <div>
                    <p class="heading">Nodes</p>
                    <p class="title is-size-5" x-text="poolNodesCount(pool)"></p>
                </div>
            </div>
            <div class="level-item has-text-centered">
                <div>
                    <p class="heading">Storage Units</p>
                    <p class="title is-size-5" x-text="poolStorageUnitsCount(pool)"></p>
                </div>
            </div>
            <div class="level-item has-text-centered">
                <div>
                    <p class="heading">Utilization</p>
                    <div class="title is-size-5" style="position: relative">
                        <div class="px-2" x-text="humanize(pool.metrics.size_used_bytes, true) + '/' + humanize(pool.metrics.size_bytes, true)"></div>
                        <div class="px-2 is-size-7 has-text-grey" x-text="`${sizePercentage(pool)}%`"></div>
                        <div class="number-bar">
                            <div :style="{width: `${sizePercentage(pool)}%`, 'background-color': numberBarColor(sizePercentage(pool))}" class="number-bar-inner"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="level-item has-text-centered">
                <div>
                    <p class="heading">Inodes</p>
                    <div class="title is-size-5" style="position: relative">
                        <div class="px-2" x-text="humanize(pool.metrics.inodes_used_count) + '/' + humanize(pool.metrics.inodes_count)"></div>
                        <div class="px-2 is-size-7 has-text-grey" x-text="`${inodesPercentage(pool)}%`"></div>
                        <div class="number-bar">
                            <div :style="{width: `${inodesPercentage(pool)}%`, 'background-color': numberBarColor(inodesPercentage(pool))}" class="number-bar-inner"></div>
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <h1 class="is-size-5 mb-4 px-2" x-show="poolStorageUnitsCount(pool) > 0">
            List of Storage Units
        </h1>

        <div class="columns is-multiline">
            <template x-for="distGroup in pool.distribute_groups">
                <template x-for="storageUnit in distGroup.storage_units">

                    <div class="column is-4-tablet is-3-widescreen">
                        <div class="card is-3">
                            <div class="card-content">
                                <div class="media">
                                    <div class="media-left">
                                        <figure class="image is-32x32" x-html="uuidThumbmail(storageUnit.id)">
                                        </figure>
                                    </div>
                                    <div class="media-content">
                                        <p class="title is-5" x-html="storageUnitNameAndStateHtml(storageUnit)"></p>
                                        <p class="subtitle">
                                            <div class="is-size-6" x-text="storageUnit.path"></div>
                                        </p>
                                    </div>
                                </div>

                                <div class="content">
                                    <div style="position: relative">
                                        <div class="px-2" x-text="humanize(storageUnit.metrics.size_used_bytes, true) + '/' + humanize(storageUnit.metrics.size_bytes, true)"></div>
                                        <div class="px-2 is-size-7 has-text-grey" x-text="`${sizePercentage(storageUnit)}%`"></div>
                                        <div class="number-bar">
                                            <div :style="{width: `${sizePercentage(storageUnit)}%`, 'background-color': numberBarColor(sizePercentage(storageUnit))}" class="number-bar-inner"></div>
                                        </div>
                                    </div>
                                    <p class="subtitle is-6">Size</p>

                                    <div style="position: relative">
                                        <div class="px-2" x-text="humanize(storageUnit.metrics.inodes_used_count) + '/' + humanize(storageUnit.metrics.inodes_count)"></div>
                                        <div class="px-2 is-size-7 has-text-grey" x-text="`${inodesPercentage(storageUnit)}%`"></div>
                                        <div class="number-bar">
                                            <div :style="{width: `${inodesPercentage(storageUnit)}%`, 'background-color': numberBarColor(inodesPercentage(storageUnit))}" class="number-bar-inner"></div>
                                        </div>
                                    </div>
                                    <p class="subtitle is-6">Inodes</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </template>
            </template>
        </div>

    </div>
    <script>
     var qparams = new URLSearchParams(window.location.search);
     handleRedirectToLogin(qparams.get("mgr"));

     document.addEventListener('alpine:init', () => {
         Alpine.data('data', () => ({
             linkName: "pool",
             mgrUrl: qparams.get("mgr"),
             poolName: qparams.get("pool"),
             pool: {distribute_groups: [], metrics: {}},
             async getPool() {
                 const mgr = storageManagerFromCookies(this.mgrUrl);
                 try {
                     this.pool = await mgr.pool(this.poolName).get(true);
                 } catch (error) {
                     authErrorRedirectHandle(this.mgrUrl, error);
                     this.error = error;
                 }
             }
         }))
     })
    </script>
{% endblock %}
