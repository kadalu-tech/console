(()=>{var d=Object.create;var c=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var _=(a,t)=>()=>(t||a((t={exports:{}}).exports,t),t.exports);var v=(a,t,s,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of f(t))!g.call(a,r)&&r!==s&&c(a,r,{get:()=>t[r],enumerable:!(e=y(t,r))||e.enumerable});return a};var m=(a,t,s)=>(s=a!=null?d($(a)):{},v(t||!a||!a.__esModule?c(s,"default",{value:a,enumerable:!0}):s,a));var u=_(()=>{});var w=m(u());var l=m(u());var P=m(u()),h=class{constructor(t,s,e){this.mgr=t,this.pool_name=s,this.name=e}static async list(t,s,e=!1){return await t.httpGet(`/api/v1/pools/${s}/volumes?state=${e?1:0}`)}async get(t=!1){return await this.mgr.httpGet(`/api/v1/pools/${this.pool_name}/volumes/${this.name}?state=${t?1:0}`)}async start(){return await this.mgr.httpPost(`/api/v1/pools/${this.pool_name}/volumes/${this.name}/start`,{})}async stop(){return await this.mgr.httpPost(`/api/v1/pools/${this.pool_name}/volumes/${this.name}/stop`,{})}async delete(){return this.mgr.httpDelete(`/api/v1/pools/${this.pool_name}/volumes/${this.name}`)}};var p=class{constructor(t,s,e){this.mgr=t,this.pool_name=s,this.name=e}static async list(t,s,e=!1){return await t.httpGet(`/api/v1/pools/${s}/nodes?state=${e?1:0}`)}async get(t=!1){return await this.mgr.httpGet(`/api/v1/pools/${this.pool_name}/nodes/${this.name}?state=${t?1:0}`)}async remove(){return this.mgr.httpDelete(`/api/v1/pools/${this.pool_name}/nodes/${this.name}`)}};var n=class{constructor(t,s){this.mgr=t,this.name=s}static async create(t,s){return await t.httpPost("/api/v1/pools",{name:s})}static async list(t){return await t.httpGet("/api/v1/pools")}async listVolumes(t=!1){return await h.list(this.mgr,this.name,t)}async delete(){return await mgr.httpDelete(`/api/v1/pools/${this.name}`)}volume(t){return new h(this.mgr,this.name,t)}node(t){return new p(this.mgr,this.name,t)}async listNodes(t=!1){return await p.list(this.mgr,this.name,t)}};var o=class{constructor(t){this.url=t,this.user_id="",this.api_key_id="",this.token=""}async httpPost(t,s){let e=await fetch(`${this.url}${t}`,{method:"POST",headers:{...this.authHeaders(),"Content-Type":"application/json"},body:JSON.stringify(s)});if(e.status==401||e.status==403)throw new l.default((await e.json()).error);let r=await e.json();if(r.error)throw new Error(r.error);return r}async httpGet(t){let s=await fetch(`${this.url}${t}`,{headers:{...this.authHeaders(),"Content-Type":"application/json"}});if(s.status==401||s.status==403)throw new l.default((await s.json()).error);let e=await s.json();if(e.error)throw new Error(e.error);return e}async httpDelete(t){let s=await fetch(`${this.url}${t}`,{method:"DELETE",headers:{...this.authHeaders(),"Content-Type":"application/json"}});if(s.status==401||s.status==403)throw new l.default((await s.json()).error);if(s.status!==204){let e=await s.json();if(e.error)throw new Error(e.error)}}static fromToken(t,s,e,r){let i=new o(t);return i.user_id=s,i.api_key_id=e,i.token=r,i}authHeaders(){return this.token!=""?{Authorization:`Bearer ${this.token}`,"X-User-ID":this.user_id}:{}}async generateApiKey(t,s){return await this.httpPost(`/api/v1/users/${t}/api-keys`,{password:s})}static async login(t,s,e){let r=new o(t),i=await r.generateApiKey(s,e);return r.user_id=i.user_id,r.api_key_id=i.id,r.token=i.token,r}async logout(){this.api_key_id!=""&&(await this.httpDelete(`/api/v1/api-keys/${this.api_key_id}`),this.api_key_id="",this.user_id="",this.token="")}async listPools(){return await n.list(this)}pool(t){return new n(this,t)}async createPool(t){return await n.create(this,t)}};window.StorageManager=o;window.StorageManagerAuthError=w.default;})();
